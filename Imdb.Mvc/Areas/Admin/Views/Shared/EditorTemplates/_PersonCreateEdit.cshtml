@model Imdb.Mvc.Areas.Admin.ViewModels.PersonViewModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(m => m.Id)

    <fieldset class="pagination-centered">
        <legend>Person</legend>

        <div>
            @Html.LabelFor(model => model.Name, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name, null, new { @class = "help-inline" })
            </div>
        </div>

        <div>
            @Html.LabelFor(model => model.Description, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description, null, new { @class = "help-inline" })
            </div>
        </div>

        <div>
            @Html.LabelFor(model => model.BirthPlace, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.BirthPlace)
                @Html.ValidationMessageFor(model => model.BirthPlace, null, new { @class = "help-inline" })
            </div>
        </div>

        <div>
            @Html.LabelFor(model => model.BirthYear, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.BirthYear)
                @Html.ValidationMessageFor(model => model.BirthYear, null, new { @class = "help-inline" })
            </div>
        </div>

        <div>
            @Html.Label("Images")
            <div class="controls">
                @Html.TextBoxFor(model => model.ImageUrl, null, new { })
                @Html.ValidationMessageFor(model => model.ImageUrl, null, new { @class = "help-inline" })
            </div>
        </div>

        <div>
            @Html.Label("Jobs")
            <div class="controls">
                @Html.TextBoxFor(model => model.JobsAsString, null, new { disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.JobsAsString, null, new { @class = "help-inline" })
            </div>
        </div>

        <div>
            @Html.LabelFor(model => model.Jobs, new { @class = "control-label" })
            <div class="controls">
                @(Html.Kendo().MultiSelect()
                  .Name("jobs")
                  .DataTextField("Name")
                  .DataValueField("Id")
                  .Placeholder("Select jobs...")
                  .AutoBind(true)
                  .DataSource(source =>
                  {
                      source.Read(read =>
                      {
                          read.Action("GetJobs", "Person");
                      })
                      .ServerFiltering(true);
                  })
                  .Value(new[] { new { Name = "This sucks", Id = 1 } })
                )
            </div>
        </div>
    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

